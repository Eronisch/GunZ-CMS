var express = require('express');
var router = express.Router();
var CharacterService = require('./../../services/server/characterService.js');
var characterService = new CharacterService();

router.get('/:id', function (req, res) {
    characterService.getById(req.params.id).then(function (character) {
        res.send(character);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/amountFriends', function (req, res) {
    characterService.getAmountFriends(req.params.id).then(function (amountFriends) {
        res.send({ amount : amountFriends });
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/skills', function (req, res) {
    characterService.getSkills(req.params.id).then(function (skills) {
        res.send(skills);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.put('/:id/sex', function (req, res) {
    characterService.changeSex(req.params.id).then(function () {
        res.send();
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/friends', function (req, res) {
    characterService.getFriends(req.params.id).then(function (friends) {
        res.send(friends);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/searchfriends', function (req, res) {
    characterService.searchFriends(req.params.id, req.query.search, req.query.order, req.query.page, req.query.limit).then(function (friends) {
        res.send(friends);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/matches', function (req, res) {
    characterService.getMatchLog(req.params.id, req.query.page, req.query.limit).then(function (matches) {
        res.send(matches);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/comments', function (req, res) {
    characterService.getComments(req.params.id, req.query.page, req.query.limit).then(function (matches) {
        res.send(matches);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.post('/:id/comments', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    characterService.addComment(req.params.id, LoginService(req.session).getUserId(), req.body.comment).then(function () {
        res.send();
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/clanwar', function (req, res) {
    var ClanService = require('./../../services/server/ClanService.js');
    var clanService = new ClanService();
    clanService.getGameLogByCharacterId(req.params.id, req.query.page, req.query.limit).then(function (matches) {
        res.send(matches);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/levels', function (req, res) {
    characterService.getLevelUpLog(req.params.id, req.query.page, req.query.limit).then(function (data) {
        res.send(data);
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.get('/:id/isOwner', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    if (!LoginService(req.session).isLoggedIn()) {
        return res.send({ isOwner: false });
    }
    characterService.isCharacterOwnedByAccountId(req.params.id, LoginService(req.session).getUserId()).then(function (isOwner) {
        res.send({ isOwner: isOwner });
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.put('/:id/emblem', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    var loginService = new LoginService(req.session);
    
    if (loginService.isLoggedIn()) {
        req.pipe(req.busboy);
        req.busboy.on('file', function (fieldname, file, filename) {
            characterService.editEmblem(req.params.id, loginService.getUserId(), file, filename).then(function (url) {
                res.status(200).send({ url : url });
            }).catch(function (err) {
                console.log(err);
                res.status(500).send();
            });
        });
    }
    else {
        res.status(401).send();
    }
});

router.put('/:id/header', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    var loginService = new LoginService(req.session);
    
    if (loginService.isLoggedIn()) {
        req.pipe(req.busboy);
        req.busboy.on('file', function (fieldname, file, filename) {
            characterService.editHeader(req.params.id, loginService.getUserId(), file, filename).then(function (url) {
                res.status(200).send({ url : url });
            }).catch(function (err) {
                console.log(err);
                res.status(500).send();
            });
        });
    }
    else {
        res.status(401).send();
    }
});

router.put('/:id/about', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    var loginService = new LoginService(req.session);
    
    if (!loginService.isLoggedIn()) {
        res.status(401).send();
    }
    
    characterService.updateAbout(req.params.id, loginService.getUserId(), req.body.about).then(function () {
        res.status(200).send();
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

router.delete('/:id/friend/:friendId', function (req, res) {
    var LoginService = require('./../../services/server/LoginService.js');
    var loginService = new LoginService(req.session);
    
    if (!loginService.isLoggedIn()) {
        res.status(401).send();
    }
    
    characterService.removeFriend(loginService.getUserId(), req.params.id, req.params.friendId).then(function () {
        res.status(200).send();
    }).catch(function (err) {
        console.log(err);
        res.status(500).send();
    });
});

module.exports = router;